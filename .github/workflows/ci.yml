name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - feature/ci-cd
    paths:
      - backend/**
      - frontend/**
      - .github/workflows/ci.yml

  pull_request:
    branches:
      - main
    paths:
      - backend/**
      - frontend/**
      - .github/workflows/ci.yml

  workflow_dispatch:

env:
  GO_VERSION: '1.24'
  FLUTTER_VERSION: '3.32.2'

jobs:
  lint:
    name: Lint & Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Lint Go (vet + fmt)
        working-directory: backend
        run: |
          go vet ./...
          gofmt -s -w .
          if [ -n "$(gofmt -l .)" ]; then
            echo "Go code is not formatted. Run 'gofmt -s -w .' locally"
            exit 1
          fi

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: lint
    env:
      JWT_SECRET: "foobar"
      DATABASE_URL: "postgres://user:pass@localhost:5432/devdb?sslmode=disable"
    steps:
      - uses: actions/checkout@v4

      - name: Setup Go & Test Backend
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'
      - name: Run backend tests
        run: |
          cd backend
          go test ./... -v

      - name: Setup Flutter & Test Frontend
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
      - run: |
          cd frontend
          flutter test --coverage || true

  build-and-up:
    name: Build & start services via Docker Compose
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v2
      - name: Build & start all services
        run: |
          docker-compose --env-file devops/.env \
            -f devops/docker-compose.yml up -d --build

  build-frontend:
    name: Build Flutter Web
    runs-on: ubuntu-latest
    needs: build-and-up
    steps:
      - uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Build web
        run: |
          cd frontend
          flutter build web --release

      - name: Upload Frontend Artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-web
          path: frontend/build/web/

  deploy-pages:
    name: Deploy to GitHub Pages
    if: github.ref == 'refs/heads/main'
    needs: build-frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: frontend/build/web
          keep_files: false
